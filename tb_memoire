LIBRARY ieee;
USE ieee.std_logic_1164.all; 
use ieee.numeric_std.all;

ENTITY tb_memoire IS
END tb_memoire;

ARCHITECTURE behavior OF tb_memoire IS 

    -- Component Declaration for the Unit Under Test (UUT)
    COMPONENT memoire
    PORT(
         clk : IN  std_logic;
         rst : IN  std_logic;
         dataIn : IN  std_logic_vector(31 downto 0);
         WrEn : IN  std_logic;
         Addr : IN  std_logic_vector(5 downto 0);
         dataOut : OUT  std_logic_vector(31 downto 0)
        );
    END COMPONENT;

   --Inputs
   signal clk : std_logic := '0';
   signal rst : std_logic := '0';
   signal dataIn : std_logic_vector(31 downto 0) := (others => '0');
   signal WrEn : std_logic := '0';
   signal Addr : std_logic_vector(5 downto 0) := (others => '0');

    --Outputs
   signal dataOut : std_logic_vector(31 downto 0);

   -- Clock period definitions
   constant clk_period : time := 10 ns;

BEGIN

	-- Instantiate the Unit Under Test (UUT)
   uut: memoire PORT MAP (
          clk => clk,
          rst => rst,
          dataIn => dataIn,
          WrEn => WrEn,
          Addr => Addr,
          dataOut => dataOut
        );

   -- Clock process definitions
   clk_process :process
   begin
		clk <= '0';
		wait for clk_period/2;
		clk <= '1';
		wait for clk_period/2;
   end process;

   -- Stimulus process
   stim_proc: process
   begin		
      -- hold reset state for 100 ns.
		wait for 100 ns;  
		
		rst <= '0'; 
		wait for clk_period*10;

      -- write data to the memory
		WrEn <= '1'; 
		dataIn <= "00000000000000000000000000110000"; 
		Addr <= "000001"; 
		wait for clk_period*10;

      -- read data from the memory
		WrEn <= '0'; 
		wait for clk_period*10;

      -- write data to another location in the memory
		WrEn <= '1'; 
		dataIn <= "00000000000000000000000000111111"; 
		Addr <= "000010"; 
		wait for clk_period*10;

      -- read data from the memory
		WrEn <= '0'; 
		wait for clk_period*10;

		wait;
   end process;

END;
